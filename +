# Use PHP 8.2 with Apache
FROM php:8.2-apache

# Install necessary dependencies, including oniguruma (libonig-dev)
RUN apt-get update && apt-get install -y \
    libpng-dev libjpeg-dev libfreetype6-dev \
    libcurl4-openssl-dev libzip-dev libexif-dev libicu-dev libmagic-dev \
    libonig-dev \
    unzip git curl cron \
    && docker-php-ext-configure gd --with-freetype --with-jpeg \
    && docker-php-ext-install -j$(nproc) \
    gd curl mbstring mysqli zip exif intl fileinfo json \
    && apt-get clean

# Set working directory
WORKDIR /var/www/html

# Download and extract HumHub
RUN curl -L https://www.humhub.org/download/package/humhub-1.16.0.zip -o humhub.zip \
    && unzip humhub.zip -d /var/www/html \
    && rm humhub.zip

# Set up permissions for required directories
RUN chown -R www-data:www-data /var/www/html \
    && chmod -R 755 /var/www/html \
    && chmod -R 775 /var/www/html/protected/runtime \
    && chmod -R 775 /var/www/html/protected/config \
    && chmod -R 775 /var/www/html/uploads

# Copy custom php.ini settings
COPY php.ini /usr/local/etc/php/

# Set up cron jobs for HumHub background tasks
RUN echo "* * * * * www-data php /var/www/html/protected/yii queue/run" > /etc/cron.d/humhub-cron \
    && chmod 0644 /etc/cron.d/humhub-cron \
    && crontab /etc/cron.d/humhub-cron

# Expose Apache port
EXPOSE 80

# Start Apache and Cron in the background
CMD ["sh", "-c", "service cron start && apache2-foreground"]:20


# Expose Apache port
EXPOSE 80

# Start Apache and Cron in the background
CMD ["sh", "-c", "service cron start && apache2-foreground"]

